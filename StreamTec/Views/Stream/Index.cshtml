@model Dictionary<string, Dictionary<string, List<Stream>>>

@{
    ViewData["Title"] = "Timetable";
    IEnumerable<Stream> streams = ViewData["Streams"] as IEnumerable<Stream>;
}

<!-- ======= Breadcrumbs ======= -->
<section class="breadcrumbs">
	<div class="container">

		<div class="d-flex justify-content-between align-items-center">
			<h2>Stream Timetable</h2>
		</div>

	</div>
</section><!-- End Breadcrumbs -->

<!-- ======= Main Content ======= -->
<section class="inner-page">
	<div class="container">
		<nav class="sidebar card py-2 mb-4 col-2">
			<ul class="nav flex-column" id="nav_accordion">
				<li class="nav-item">
					<select class="form-select form-select-sm" aria-label=".form-select-sm example" onchange="detectMajor(this)">
						<option selected>Please select a major</option>
						@foreach (var major in Model)
						{
							<option value="@major.Key">@major.Key</option>
						}
					</select>
				</li>	
				<li>
					<div class="js-course-selection">

					</div>
					
				</li>
				
				<li>
					<span name="course" id="course-list"></span>
				</li>
				<li>
					<button id="btn">Get Selected Courses</button>
				</li>
			</ul>
		</nav>
	</div>
</section><!-- End Main Content -->

<p class="test"></p>

<script>
	const checkbox = document.querySelector(".course-checkbox");
	const btn = document.querySelector('#btn');

	var collection = @Json.Serialize(Model);
	const courseSelection = document.querySelector(".js-course-selection");
	let courses = [];

function detectMajor(selectMajor){
	const courseSelectElem = document.getElementById("course-select-wrap");
	var courseList = collection[selectMajor.value];

	courseSelectElem.innerHTML = "";

	for(var key in collection[selectMajor.value]){
		courses.push(key);
	}
}

function createCourseCheckbox(courses) {
    for (var i = 0; i < courses.length; i++) {
        const li = document.createElement("li");
        const label = document.createElement("label");
        const checkbox = document.createElement("input");
        label.innerText = courses[i];
        checkbox.type = "checkbox";
        li.appendChild(label);
        li.appendChild(checkbox);
        courseSelection.appendChild(li);
    }
}

function loadAllCourse() {
    for (const major in collection) {
        for (const course in collection[major]) {
            courses.push(course)
        }
    }
    createCourseCheckbox(courses);
};

window.onload = function() {
    loadAllCourse();
};

btn.addEventListener('click', (event) => {
		let checkboxes = document.querySelectorAll('input:checked');
	let values = [];
	checkboxes.forEach((checkbox) => {
		var text = checkbox.parentElement.innerText;
		values.push(text);		
	});
	alert(values);
	console.log(values);
});


</script>
